local w, h = term.getSize()
local mainForm = nil
local popupPanel = nil
local navigateBar = nil
local fileList = nil
local dir = "/"
local prevDir = "/"
local mouseX, mouseY = 1,1

function main()
	while true do
		--write(dir)sleep(2)
		fileList.dir = dir
		mainForm:render()
		local event = {os.pullEvent()}
		if event[1] == "mouse_click" and event[2] == 1 then
			mouseX = event[3]
			mouseY = event[4]
		end
		mainForm:update(event)
		
	end
end

function init()

	--[[
		Button Logic here	
	--]]

	local leftClickFile = function(self)
		if fs.isDir(self.value) then 
			dir = self.value 
			navigateBar.value = self.value 
		else
			if josCfg.fileExtensions[fc.getFileExtension(self.value)] ~= nil then
				josMulti.setLastTab(josMulti.getCurrentTab())
				josMulti.changeCurrentTabI(josMulti.newTab(josCfg.fileExtensions[fc.getFileExtension(self.value)].." "..self.value,fs.getName(josCfg.fileExtensions[fc.getFileExtension(self.value)])))
			else
				josMulti.setLastTab(josMulti.getCurrentTab())
				josMulti.changeCurrentTabI(josMulti.newTab(self.value,fs.getName(self.value)))
			end
		end 
	end
	
	local popupOptions = function(tself,self)
		if tself.name == "open" then  
			leftClickFile(self)
		elseif tself.name == "open with" then
			local progDir = jos.drawInputDialog("Open With","please enter program ","/usr/bin/luaide")
			if fs.exists(progDir) then
				josMulti.setLastTab(josMulti.getCurrentTab())
				josMulti.changeCurrentTabI(josMulti.newTab(progDir.." "..self.value))
			else
				jos.showMessage(progDir.." does not exist")
			end
		elseif tself.name == "edit" then
			if not fs.isDir(self.value) then
				josMulti.setLastTab(josMulti.getCurrentTab())
				josMulti.changeCurrentTabI(josMulti.newTab("/usr/bin/luaide "..self.value))
			end
		elseif tself.name == "cut" then
			if fs.exists("/tmp/clipBoardContents") then
				fs.delete("/tmp/clipBoardContents")
			end
			if fs.exists("/tmp/clipBoardContentsName") then
				fs.delete("/tmp/clipBoardContentsName")
			end
			fs.copy(self.value,"/tmp/clipBoardContents")
			fs.delete(self.value)
			local tFile = fs.open("/tmp/clipBoardContentsName","w")
			tFile.write(fs.getName(self.name))
			tFile.close()  
		elseif tself.name == "copy" then
			if fs.exists("/tmp/clipBoardContents") then
				fs.delete("/tmp/clipBoardContents")
			end
			if fs.exists("/tmp/clipBoardContentsName") then
				fs.delete("/tmp/clipBoardContentsName")
			end
			fs.copy(self.value,"/tmp/clipBoardContents")
			local tFile = fs.open("/tmp/clipBoardContentsName","w")
			tFile.write(fs.getName(self.name))
			tFile.close()  
		elseif tself.name == "paste" then
			local tFile = fs.open("/tmp/clipBoardContentsName","r")
			fs.copy("/tmp/clipBoardContents",self.value.."/"..tFile.readAll())
			tFile.close()
		elseif tself.name == "delete" then
			if jos.showConfirmation("Are you sure","delete "..self.name.."?") == "yes" then
				fs.delete(self.value)
			end
		elseif tself.name == "rename" then
			local newName = dir.."/"..jos.drawInputDialog("Rename","please enter a new name",self.name)
			if fs.exists(newName) == false	then
				fs.move(self.value,newName)
			end
		elseif tself.name == "new file" then
			local myFile = fs.open(self.value.."/"..jos.drawInputDialog("new file","please name the file"),"w")
			myFile.close()
		elseif tself.name == "new folder" then
			fs.makeDir(self.value.."/"..jos.drawInputDialog("new folder","please name the folder"))
		end
	end
	
	
	local rightClickFile = function(self)
		local x = self.mouseX
		local y = self.mouseY
		if x + josCfg.optionPopupWidth > w then
			x = x - (x + josCfg.optionPopupWidth - w)
		end
		if not self.inFile then
			if y + #josCfg.optionPopUpItems > h then
				y = y - (y + #josCfg.optionPopUpItems - h)
			end
			popupPanel.UIs[1] = josUI.newPopupList("right click",x,y,josCfg.optionPopUpItems,function(tself) popupOptions(tself,self) end)
		else
			if y + #josCfg.optionPopUpItemsInFile > h then
				y = y - (y + #josCfg.optionPopUpItemsInFile - h-1)
			end
			popupPanel.UIs[1] = josUI.newPopupList("right click",x,y,josCfg.optionPopUpItemsInFile,function(tself) popupOptions(tself,self) end)
		end
	end
	
	local backBtn = function(self)
		if dir ~= "/" then
			prevDir = dir
			dir = fc.cutPath(dir,"/")
			if dir ~= "/" then
				dir = string.sub(dir,1,-2) 
			end
			navigateBar.value = dir 
		end
	end

	local forwardBtn = function(self)
		dir = prevDir
		navigateBar.value = dir 
	end


	mainForm = josUI.newForm("File Explorer",1,1,w,h,colors.blue,colors.gray)
	popupPanel = josUI.newPanel("popups")
	local goBtn = josUI.newButton("Go ",function() if fs.isDir(navigateBar.value) then dir = navigateBar.value end end,w-2,2,3,1,colors.lime)
	navigateBar = josUI.newInput("navigate",8,2,w-7-4,1,colors.lightGray)
	navigateBar.value = dir
	navigateBar.executeButton = goBtn
	fileList = josUI.newFileList("files","/",10,4,w-9,h-3,leftClickFile,rightClickFile)
	local scrollbar = josUI.newScrollBar("bar",w,4,fileList)
	local freeSpace = josUI.newLabel("Free Space: "..fs.getFreeSpace(dir).." bytes",w-23,h,colors.gray)
	freeSpace.update = function(self,event)
		self.name = "Free Space: "..fs.getFreeSpace(dir).." bytes"
	end
	
	mainForm:addUI(navigateBar)
	mainForm:addUI(menuBar)
	mainForm:addUI(goBtn)
	
	mainForm:addUI({enabled = true,render = function()end,update = 
	function(self,event) 
		if event[1] == "mouse_click" and event[2] == 2 then
			local x1 = event[3]
			local y1 = event[4]
			if x1 >= 10 and x1< 10 + w-9 and y1 >= 4 and y1< 4 + h-5 then
				self.value = dir
				self.name = fs.getName(self.value)
				self.mouseX = x1
				self.mouseY = y1
				self.inFile = true
				rightClickFile(self)
			end
		end
	end})
	
	mainForm:addUI(freeSpace)
	mainForm:addUI(josUI.newButton("<-",backBtn,2,2,2,1,colors.lime))
	mainForm:addUI(josUI.newButton("->",forwardBtn,5,2,2,1,colors.lime))
	mainForm:addUI(fileList)
	mainForm:addUI(scrollbar)
	mainForm:addUI(popupPanel)
	
end

init()
main()
