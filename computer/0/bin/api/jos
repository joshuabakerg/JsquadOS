local tabLength = josCfg.tabButtonLength

function showMessage(message)
	term.setCursorPos(10,5)
	term.setBackgroundColor(colors.blue)
	term.setTextColor(josCfg.dialogTextColor)
	write("                             ")
	term.setBackgroundColor(colors.orange)
	write(" ")
	write(" ")
	term.setBackgroundColor(colors.red)
	write(" ")
	term.setCursorPos(10,6)
	term.setBackgroundColor(colors.white)
	write("                                ")
	term.setCursorPos(10,7)
	write("                                ")
	term.setCursorPos(10,8)
	write("                                ")
	term.setCursorPos(11,7)
	term.setTextColor(colors.black)
	term.setBackgroundColor(colors.white)
	write(message)
	os.pullEvent("key")
end

function showConfirmation(title,message)
	drawWindow(12,40,6,13,title)
	drawText(15,8,message,colors.black,colors.gray)
	drawButton(13,10,"  yes  ",colors.black,colors.red)
	drawButton(30,10,"   no  ",colors.black,colors.green)
	drawRectangle(12,7,0,6,colors.lightGray)
	drawRectangle(39,7,0,6,colors.lightGray)
	drawRectangle(12,13,27,0,colors.lightGray)
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	if xPos >= 13 and xPos <= 13+9 and yPos >= 10 and yPos <= 10+3 then
		return "yes"
	elseif xPos >= 30 and xPos <= 30+9 and yPos >= 10 and yPos <= 10+3 then
		return "no"
	else
		return "cancel"
	end
end

function panelClicked(x,y,button)
	if (x >= 1 and x <= 3) and (y == 19) then
		return "clickedStartButton."
	else
		return null
	end
end

function drawDesktop()
	local backgroundColor = josCfg.backgroundColor
	term.clear()
	term.setCursorPos(1,1)
	term.setBackgroundColor(backgroundColor)
	i = 1
	while true do
		if i  == 19 then
			term.setBackgroundColor(colors.green)
			term.setTextColor(colors.white)
			write("JOS ")	
			term.setBackgroundColor(colors.blue)
			write("                                               ")
			break
		else
			print("                                                   ")
		end
		i = i + 1
	end
	term.setBackgroundColor(colors.black)
end

function drawTabs()
	local tabNames = josMulti.getRunningTabs()
	term.setCursorPos(6,19)
	term.setBackgroundColor(colors.lightBlue)
	term.setTextColor(colors.black)
	x = 6
	if (tabLength*#tabNames)+(#tabNames+1)+6 > 52 then
		tabLength = math.floor((51-6-#tabNames)/#tabNames)
	end
	
	for i = 1, josMulti.getTabLength() do
		local tName = josMulti.getTabName(i)
		if #tName < tabLength then
			for z = 1 ,tabLength - #tName do
				tName = tName.." "
			end
			write(tName)
		else
			write(josMulti.getTabName(i):sub(1,tabLength))
		end
		term.setCursorPos(x+i+tabLength,19)
		x = x+tabLength
	end
end

function drawDesktopPicture(dir)
	local line = " "
	local contents = {}
	local test = " "
	if fs.exists(dir) then
		myFile = fs.open(dir,"r")
		line = myFile.readLine() 
		contents = {}
		while line do
			table.insert(contents, line)
			line = myFile.readLine()
		end
		for i = 1,table.getn(contents)-1 do
			term.setCursorPos(1,i)
			line = contents[i]
			for s = 1,string.len(line) do
				test = line:sub(s,s) 
				if test == " " then
					term.setBackgroundColor(colors.black)
				elseif test == "0" then
					term.setBackgroundColor(colors.white)
				elseif test == "1" then
					term.setBackgroundColor(colors.orange)
				elseif test == "2" then
					term.setBackgroundColor(colors.magenta)
				elseif test == "3" then
					term.setBackgroundColor(colors.lightBlue)
				elseif test == "4" then
					term.setBackgroundColor(colors.yellow)
				elseif test == "5" then
					term.setBackgroundColor(colors.lime)
				elseif test == "6" then
					term.setBackgroundColor(colors.pink)
				elseif test == "7" then
					term.setBackgroundColor(colors.gray)
				elseif test == "8" then
					term.setBackgroundColor(colors.lightGray)
				elseif test == "9" then
					term.setBackgroundColor(colors.cyan)
				elseif test == "a" then
					term.setBackgroundColor(colors.purple)
				elseif test == "b" then
					term.setBackgroundColor(colors.blue)
				elseif test == "c" then
					term.setBackgroundColor(colors.brown)
				elseif test == "d" then
					term.setBackgroundColor(colors.green)
				elseif test == "e" then
					term.setBackgroundColor(colors.red)
				elseif test == "f" then
					term.setBackgroundColor(colors.black)
				end
				write(" ")
			end
		end
		term.setBackgroundColor(colors.green)
		term.setTextColor(colors.white)
		term.setCursorPos(1,19)
		write("JOS ")	
		term.setBackgroundColor(colors.blue)
		write("                                               ")
		myFile.close()
	else
		showMessage("directory doesnt exist")
	end

end

function charToColour(theChar)
	--print(theChar)
	if theChar == "0" then
		return colors.white
	elseif theChar == "1" then 
		return colors.orange
	elseif theChar == "2" then
		return colors.magenta
	elseif theChar == "3" then
		return colors.lightBlue
	elseif theChar == "4" then
		return colors.yellow
	elseif theChar == "5" then
		return colors.lime	
	elseif theChar == "6" then
		return colors.pink
	elseif theChar == "7" then
		return colors.gray
	elseif theChar == "8" then
		return colors.lightGray
	elseif theChar == "9" then
		return colors.cyan
	elseif theChar == "a" then
		return colors.purple
	elseif theChar == "b" then
		return colors.blue
	elseif theChar == "c" then
		return colors.brown
	elseif theChar == "d" then
		return colors.green
	elseif theChar == "e" then
		return colors.red
	elseif theChar == "f" then
		return colors.black	
	end
	
	
end

function getCharOf( colour )
	-- Incorrect values always convert to nil
	if type(colour) == "number" then
		local value = math.floor( math.log(colour) / math.log(2) ) + 1
		if value >= 1 and value <= 16 then
			return string.sub( "0123456789abcdef", value, value )
		end
	end
	return " "
end	

function loadLabelIcon(dir)
	local aIcon = {}
	local sLine = ""
	if fs.exists(dir) then
		local myFile = fs.open(dir,"r")
		for y = 0 ,5 do
			sLine = myFile.readLine()
			for x = 0 ,3 do
				aIcon[x+y*4+1] = string.sub(sLine,x+1,x+1)
				if x+y*4+1 < 13 then
					if aIcon[x+y*4+1] == " " then
						aIcon[x+y*4+1] = "f"
					end
				else
					if aIcon[x+y*4+1] == nil then
						aIcon[x+y*4+1] = " "
					end
				end
				
			end
		end
		myFile.close()
		return aIcon
	else
		return {"c","1","2","3","d","5","6","7","8","9","a","b","e","r","r"," ","n","o","t"," ","f","n","d"," "}
	end
end

function drawLabel(label,x,y,clr,txtClr,bckTxtClr)
	for i = 1,3,1 do
		term.setBackgroundColor(clr)
		term.setTextColor(txtClr)
		term.setCursorPos(x,y)
		write("    ")
		y=y+1
	end	
	term.setCursorPos(x-1,y)
	term.setBackgroundColor(bckTxtClr)
	print(label:sub(1,6))
end

function drawLabelCustom(label,x,y,clr,txtClr,bckTxtClr,arr)
	--arr = loadLabelIcon("/home/joshua/Pictures/icon.pnt")
	for ya = 0,2 do
		for xa = 0,3 do
			--print(lettersColour[xa+ya*4+1])
			--sleep(2)
			term.setCursorPos(x+xa,y+ya)
			term.setBackgroundColor(charToColour(arr[xa+ya*4+1]))
			term.setTextColor(txtClr)
			if arr[xa+(ya+3)*4+1] == nil then
				write(" ")
			else
				write(arr[xa+(ya+3)*4+1])
			end
		end
	end
	term.setCursorPos(x-1,y+3)
	term.setBackgroundColor(bckTxtClr)
	print(label:sub(1,6))
	term.setCursorPos(x,y+4)
	print(label:sub(7,10))
end

function drawButton(x,y,contents,txtClr,bckClr)
	term.setTextColor(txtClr)
	term.setBackgroundColor(bckClr)
	for i = 0, #contents+1 ,1 do
		term.setCursorPos(x+i,y)
		write(" ")
	end
	
	term.setCursorPos(x,y+1)
	write(" ")
	write(contents)
	write(" ")
	
	for i = 0, #contents+1 ,1 do
		term.setCursorPos(x+i,y+2)
		write(" ")
	end
end

function loadDeskopFromFile(dir)
	local x , y = 2 , 2
	local fileColor = colors.white
	local FileList = fs.list(dir)
	table.sort(FileList)
	for i, file in ipairs(FileList) do
		if fs.isDir(dir..file) then
			fileColor = colors.yellow
		else
			fileColor = colors.white	
		end
		drawLabelCustom(file,x,y,fileColor,colors.lightGray,josCfg.backgroundColor,loadLabelIcon("/usr/icons/blank.pnt"))
		if x == 44 then 
			y = y + 5
			x = 2
		else
			x = x + 7
		end

	end
end

function drawStartMenu()
	local list = josCfg.startMenuItems
	local menuLength = table.getn(list)
	local menuHeight = 18 - menuLength + 1 
	term.setCursorPos(1,menuHeight)
	term.setBackgroundColor(josCfg.startMenuBackgroundColor)
	term.setTextColor(josCfg.startMenuTextColor)
	for i = 1,menuLength do
		for s = 1 , josCfg.startMenuWidth do 
			write(" ")
		end
		term.setCursorPos(1, menuHeight + i - 1)
		print(list[i])
	end
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	for i = 1, menuLength do
		if (xPos <= josCfg.startMenuWidth) and (yPos == i + menuHeight -1 ) then
			return josCfg.startMenuExec[i] , xPos , yPos
		end
	end
	

end

function drawDirPopUp(x,y,dir)
	local aList = {}
	local FileList = fs.list(dir) 
	x = tonumber(x)
	y = tonumber(y)
	term.setBackgroundColor(josCfg.popUpMenuBackgroundColor)
	term.setTextColor(josCfg.popUpMenuTextColor)
	for i, file in ipairs(FileList) do
		aList[i] = file
    	end
	term.setCursorPos(x,19 - table.getn(aList))
	for i = 1,table.getn(aList) do
		for s = 1 , josCfg.popUpMenuWidth do
			write(" ")
		end
		local xPos, yPos = term.getCursorPos()
		term.setCursorPos(xPos - josCfg.popUpMenuWidth,yPos)
		print(aList[i]:sub(1,josCfg.popUpMenuWidth))
		local xPos, yPos = term.getCursorPos()
		term.setCursorPos(xPos + josCfg.popUpMenuWidth, yPos )	
	end
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	for i = 0,  table.getn(aList)do
		if (xPos <= josCfg.popUpMenuWidth + josCfg.startMenuWidth and xPos >= josCfg.startMenuWidth +1) and (yPos == i + 19 -table.getn(aList) -1  ) then			return "//"..dir..aList[i]
		end
	end
end

function drawInputDialog(title,message,defualtText)
	local sWord = ""
	drawRectangle(9,6,0,5,colors.black)
	drawRectangle(9,11,31,0,colors.black)
	term.setCursorPos(10,5)
	term.setBackgroundColor(colors.blue)
	term.setTextColor(josCfg.dialogTextColor)
	write("                             ")
	term.setBackgroundColor(colors.orange)
	write(" ")
	term.setBackgroundColor(colors.green)
	write(" ")
	term.setBackgroundColor(colors.red)
	write(" ")
	term.setCursorPos(10,5)
	term.setBackgroundColor(colors.blue)
	write(title)
	term.setCursorPos(10,6)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("                              ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(16,6)
	term.setBackgroundColor(colors.yellow)
	write(message)
	term.setCursorPos(10,7)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("                              ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(10,8)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("    ")
	term.setBackgroundColor(colors.white)
	write("                      ")
	term.setBackgroundColor(colors.yellow)
	write("    ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(10,9)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("                              ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(10,10)
	write("                                ")
	term.setCursorPos(15,8)
	term.setBackgroundColor(colors.white)
	if defualtText ~= null then
		sWord = defualtText
		write(defualtText..">")
	end
	while true do
		local event, button, xPos, yPos = os.pullEvent()
		if event == "char" then
			sWord = sWord..button
			term.setCursorPos(15,8)
			term.setBackgroundColor(colors.white)
			write("                      ")
			term.setCursorPos(15,8)
			write(sWord)
			write(">")
		elseif event == "key" and button == 14 then
			sWord = sWord:sub(1,string.len(sWord)-1)
			term.setCursorPos(15,8)
			term.setBackgroundColor(colors.white)
			write("                      ")
			term.setCursorPos(15,8)
			write(sWord)
			write(">")
		elseif (event == "key" and button == 28) then
			return sWord
		elseif (event == "mouse_clicka") then
			if (xPos == 41 and yPos == 5) then
				break
			end
		end	
	end
end

function drawRectangle(x,y,length,height,color)
	term.setCursorPos(x,y)
	term.setBackgroundColor(color)
	for z = y , y + height do
		for i = x,x+length do
			term.setCursorPos(i,z)
			write(" ")
		end
	end
end

function drawText(x,y,text,txtColor,bckColor)
	term.setCursorPos(x,y)
	term.setTextColor(txtColor)
	term.setBackgroundColor(bckColor)
	write(text)
end

function drawCustomPopup(x,y,contents) -- draws a popup with a provided list of string and will return wich string was clicked
	local termX , termY = term.getSize()
	local length  = 0
	local biggestItem = ""
	for i = 1,#contents do
		if i == 1 then
			biggestItem = contents[i]
		else
			if	string.len(contents[i]) > #biggestItem then
				biggestItem = contents[i]			
			end
		end
	end
	length = string.len(biggestItem)
	
	if x + length > termX then
		x =  termX - length
	end
	if y + #contents > termY then
		y = termY - #contents +1
	end
	
	drawRectangle(x,y,length,#contents -1,colors.white)
	term.setTextColor(colors.black)
	for i = 1,#contents do
		term.setCursorPos(x,y+i-1)
		write(contents[i])
	end
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	for z = 1,#contents do
		if xPos >= x and xPos <= x + #biggestItem and yPos == y + z -1 then
			return contents[z]
		end
	end
	
end

function drawOptionPopUpMenu(x,y,file)
	local termX , termY = term.getSize()
	if x + 13 > termX then
		x = x - (x + 13 - termX)
	end
	if y + 9 > termY then
		y = y - (y + 9 - termY)
	end
	drawRectangle(x,y,13,9,colors.white)
	term.setCursorPos(x,y)
	term.setBackgroundColor(colors.white)
	term.setTextColor(colors.black)
	write("open")
	term.setCursorPos(x,y+1)
	write("Open with..")
	term.setCursorPos(x,y+2)
	write("Copy")
	term.setCursorPos(x,y+3)
	write("Cut")
	term.setCursorPos(x,y+4)
	write("Paste")
	term.setCursorPos(x,y+5)
	write("Delete")
	term.setCursorPos(x,y+6)
	write("Edit")
	term.setCursorPos(x,y+7)
	write("Rename")
	term.setCursorPos(x,y+8)
	write("Create File")
	term.setCursorPos(x,y+9)
	write("Create Folder")
	term.setCursorPos(x,y+10)
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	if event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y then
		if josCfg.fileExtensions[fc.getFileExtension(file)] ~= nil then
			josMulti.setLastTab(josMulti.getCurrentTab())
			josMulti.changeCurrentTabI(josMulti.newTab(josCfg.fileExtensions[fc.getFileExtension(file)].." /"..file,fc.getFileName(file)))
			
		end
		--josMulti.changeCurrentTabI(josMulti.newTab(file,fs.getName(file)))
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +2 then
		if fs.exists("/tmp/clipBoardContents") then
			fs.delete("/tmp/clipBoardContents")
		end
		if fs.exists("/tmp/clipBoardContentsName") then
			fs.delete("/tmp/clipBoardContentsName")
		end
		fs.copy(file,"/tmp/clipBoardContents")
		local tFile = fs.open("/tmp/clipBoardContentsName","w")
		tFile.write(fs.getName(file))
		tFile.close()  
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +3 then
		if fs.exists("/tmp/clipBoardContents") then
			fs.delete("/tmp/clipBoardContents")
		end
		if fs.exists("/tmp/clipBoardContentsName") then
			fs.delete("/tmp/clipBoardContentsName")
		end
		fs.copy(file,"/tmp/clipBoardContents")
		fs.delete(file)
		local tFile = fs.open("/tmp/clipBoardContentsName","w")
		tFile.write(fs.getName(file))
		tFile.close()  
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +4 then
		local tFile = fs.open("/tmp/clipBoardContentsName","r")
		fs.copy("/tmp/clipBoardContents",fs.getDir(file).."/"..tFile.readAll())
		tFile.close()
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +5 then
		if showConfirmation("Are you sure","delete "..fs.getName(file).."?") == "yes" then
			fs.delete(file)
		end
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +6 then
		josMulti.setLastTab(josMulti.getCurrentTab())
		josMulti.changeCurrentTabI(josMulti.newTab(josCfg.defualtEditProgram .." "..file,fs.getName(file)))
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +7 then	
		local orgF = file
		local newF = fs.getDir(file).."/"..drawInputDialog("rename","new name",fs.getName(orgF))
		print(orgF)
		print(newF)
		sleep(2)
		if fs.exists(newF) == false	then
			fs.move(orgF,newF)
		end
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +8 then
		local myFile = fs.open(fs.getDir(file).."/"..drawInputDialog("new file","please name the file"),"w")
		myFile.close()
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +9 then
		fs.makeDir(fs.getDir(file).."/"..drawInputDialog("new folder","please name the folder"))
	end
		
end

function drawOptionPopUpMenuCloud(x,y,file)
	local termX , termY = term.getSize()
	if x + 13 > termX then
		x = x - (x + 13 - termX)
	end
	if y + 9 > termY then
		y = y - (y + 9 - termY)
	end
	drawRectangle(x,y,13,9,colors.white)
	term.setCursorPos(x,y)
	term.setBackgroundColor(colors.white)
	term.setTextColor(colors.black)
	write("open")
	term.setCursorPos(x,y+1)
	write("Open with..")
	term.setCursorPos(x,y+2)
	write("Copy")
	term.setCursorPos(x,y+3)
	write("Cut")
	term.setCursorPos(x,y+4)
	write("Paste")
	term.setCursorPos(x,y+5)
	write("Delete")
	term.setCursorPos(x,y+6)
	write("Edit")
	term.setCursorPos(x,y+7)
	write("Rename")
	term.setCursorPos(x,y+8)
	write("Create File")
	term.setCursorPos(x,y+9)
	write("Create Folder")
	term.setCursorPos(x,y+10)
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	if event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y then
		return "open"	
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +2 then
		return "copy"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +3 then
		return "cut"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +4 then
		return "paste"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +5 then
		return "delete"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +6 then
		return "edit"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +7 then	
		return "rename"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +8 then
		return "createFile"
	elseif event == "mouse_click" and xPos >= x and xPos <= x + 13 and yPos == y +9 then
		return "createFolder"
	end
		
end

function getPressedButton(dir)  --Sets up buttons for the loaded labels , please use loadDesktopFromFile() first
	f = {}
	local loadedLabels = {}
	x , y = 2 , 2
	fileColor = colors.white
	local FileList = fs.list(dir)
	table.sort(FileList)
	for i, file in ipairs(FileList) do
		loadedLabels[i]= file
		f[file.."x"] = x
		f[file.."y"] = y
		if x == 44 then 
			y = y + 5
			x = 2
		else
			x = x + 7
		end
	end
		if josMulti.getTabLength() >= 1 then drawTabs() end
		local event, button, xPos, yPos = os.pullEvent("mouse_click")
	i = 1
	while loadedLabels[i] ~= nill do
		if xPos ~= nil and yPos ~= nill then 
		if (xPos >= f[loadedLabels[i].."x"] and xPos <= f[loadedLabels[i].."x"] + 3 ) and (yPos >= f[loadedLabels[i].."y"] and yPos <=       f[loadedLabels[i].."y"] + 3 ) then
			return dir..loadedLabels[i],button,xPos,yPos
		end
		i = i + 1
		end
	end
	if josMulti.getTabLength() >= 1 then
		x = 5
		for i = 1,josMulti.getTabLength() do
			if (yPos == 19) and (xPos >= x+i) and (xPos <= x+i+tabLength-1) then----------------------------------------
				josMulti.changeCurrentTabI(i)
				josMulti.runTab()
			end
			x = x+tabLength
		end
	end
	
	
	pC = panelClicked(xPos,yPos,button)
	if pC ~= null then
		return pC
	end 		
end

function drawWindow(x1,x2,y1,y2,title)
	for i = 0,y2 -y1 do
		term.setCursorPos(x1, y1 +i)
		if i == 0 then
			term.setBackgroundColor(josCfg.windowTitleColor)
			for x = 1, x2 - x1  do
				write(" ")
			end	
			--term.setBackgroundColor(colors.orange)
			--write(" ")
			--term.setBackgroundColor(colors.green)
			--write(" ")
			--term.setBackgroundColor(colors.red)
			--write(" ")
			term.setCursorPos(x1,y1)
			term.setBackgroundColor(josCfg.windowTitleColor)
			term.setTextColor(colors.black)
			write(title:sub(1,x2-x1 - 3))
		else	
			term.setBackgroundColor(josCfg.windowMainColor)
			for x = 1 , x2 - x1 do 
				write(" ")
			end
		end
	end	
end
