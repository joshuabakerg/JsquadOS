local backgroundColor = josCfg.backgroundColor

function showMessage(message)
	term.setCursorPos(10,5)
	term.setBackgroundColor(colors.blue)
	term.setTextColor(josCfg.dialogTextColor)
	write("                             ")
	term.setBackgroundColor(colors.orange)
	write(" ")
	write(" ")
	term.setBackgroundColor(colors.red)
	write(" ")
	term.setCursorPos(10,6)
	term.setBackgroundColor(colors.red)
	write("                                ")
	term.setCursorPos(10,7)
	write("                                ")
	term.setCursorPos(10,8)
	write("                                ")
	term.setCursorPos(10,7)
	term.setTextColor(colors.black)
	term.setBackgroundColor(colors.white)
	write(message)
	os.pullEvent("key")
	sleep(2)
end

function panelClicked(x,y,button)
	if (x >= 1 and x <= 3) and (y == 19) then
		return "clickedStartButton."
	else
		return null
	end
end

function drawDesktop()
	term.clear()
	term.setCursorPos(1,1)
	term.setBackgroundColor(backgroundColor)
	i = 1
	while true do
		if i  == 19 then
			term.setBackgroundColor(colors.green)
			term.setTextColor(colors.white)
			write("JOS ")	
			term.setBackgroundColor(colors.blue)
			write("                                               ")
			break
		else
			print("                                                   ")
		end
		i = i + 1
	end
	term.setBackgroundColor(colors.black)
end

function drawTabs()
	local tabNames = josMulti.getRunningTabs()
	term.setCursorPos(6,19)
	term.setBackgroundColor(colors.lightBlue)
	term.setTextColor(colors.black)
	x = 6
	for i = 1, #tabNames do
		write(josMulti.getTabName(i):sub(1,1))
		term.setCursorPos(x+i+1,19)
		x = x+1
	end
end

function drawDesktopPicture(dir)
	local line = " "
	local contents = {}
	local test = " "
	if fs.exists(dir) then
		myFile = fs.open(dir,"r")
		line = myFile.readLine() 
		contents = {}
		while line do
			table.insert(contents, line)
			line = myFile.readLine()
		end
		for i = 1,table.getn(contents)-1 do
			term.setCursorPos(1,i)
			line = contents[i]
			for s = 1,string.len(line) do
				test = line:sub(s,s) 
				if test == " " then
					term.setBackgroundColor(colors.black)
				elseif test == "0" then
					term.setBackgroundColor(colors.white)
				elseif test == "1" then
					term.setBackgroundColor(colors.orange)
				elseif test == "2" then
					term.setBackgroundColor(colors.magenta)
				elseif test == "3" then
					term.setBackgroundColor(colors.lightBlue)
				elseif test == "4" then
					term.setBackgroundColor(colors.yellow)
				elseif test == "5" then
					term.setBackgroundColor(colors.lime)
				elseif test == "6" then
					term.setBackgroundColor(colors.pink)
				elseif test == "7" then
					term.setBackgroundColor(colors.gray)
				elseif test == "8" then
					term.setBackgroundColor(colors.lightGray)
				elseif test == "9" then
					term.setBackgroundColor(colors.cyan)
				elseif test == "a" then
					term.setBackgroundColor(colors.purple)
				elseif test == "b" then
					term.setBackgroundColor(colors.blue)
				elseif test == "c" then
					term.setBackgroundColor(colors.brown)
				elseif test == "d" then
					term.setBackgroundColor(colors.green)
				elseif test == "e" then
					term.setBackgroundColor(colors.red)
				elseif test == "f" then
					term.setBackgroundColor(colors.black)
				end
				write(" ")
			end
		end
		term.setBackgroundColor(colors.green)
		term.setTextColor(colors.white)
		term.setCursorPos(1,19)
		write("JOS ")	
		term.setBackgroundColor(colors.blue)
		write("                                               ")
		myFile.close()
	else
		showMessage("directory doesnt exist")
	end

end

function drawLabel(label,x,y,clr,txtClr,bckTxtClr)
	for i = 1,3,1 do
		term.setBackgroundColor(clr)
		term.setTextColor(txtClr)
		term.setCursorPos(x,y)
		write("    ")
		y=y+1
	end	
	term.setCursorPos(x-1,y)
	term.setBackgroundColor(bckTxtClr)
	print(label:sub(1,6))
end
function loadDeskopFromFile(dir)
	local x , y = 2 , 2
	local fileColor = colors.white
	local FileList = fs.list(dir)
	table.sort(FileList)
	for i, file in ipairs(FileList) do
		if fs.isDir(dir..file) then
			fileColor = colors.yellow
		else
			fileColor = colors.white	
		end
		drawLabel(file,x,y,fileColor,colors.white,josCfg.backgroundColor)
		if x == 44 then 
			y = y + 5
			x = 2
		else
			x = x + 7
		end

	end
end

function drawStartMenu()
	local list = josCfg.startMenuItems
	local menuLength = table.getn(list)
	local menuHeight = 18 - menuLength + 1 
	term.setCursorPos(1,menuHeight)
	term.setBackgroundColor(josCfg.startMenuBackgroundColor)
	term.setTextColor(josCfg.startMenuTextColor)
	for i = 1,menuLength do
		for s = 1 , josCfg.startMenuWidth do 
			write(" ")
		end
		term.setCursorPos(1, menuHeight + i - 1)
		print(list[i])
	end
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	for i = 1, menuLength do
		if (xPos <= josCfg.startMenuWidth) and (yPos == i + menuHeight -1 ) then
			return josCfg.startMenuExec[i] , xPos , yPos
		end
	end
	

end

function drawDirPopUp(x,y,dir)
	local aList = {}
	local FileList = fs.list(dir) 
	x = tonumber(x)
	y = tonumber(y)
	term.setBackgroundColor(josCfg.popUpMenuBackgroundColor)
	term.setTextColor(josCfg.popUpMenuTextColor)
	for i, file in ipairs(FileList) do
		aList[i] = file
    	end
	term.setCursorPos(x,19 - table.getn(aList))
	for i = 1,table.getn(aList) do
		for s = 1 , josCfg.popUpMenuWidth do
			write(" ")
		end
		local xPos, yPos = term.getCursorPos()
		term.setCursorPos(xPos - josCfg.popUpMenuWidth,yPos)
		print(aList[i]:sub(1,josCfg.popUpMenuWidth))
		local xPos, yPos = term.getCursorPos()
		term.setCursorPos(xPos + josCfg.popUpMenuWidth, yPos )	
	end
	local event, button, xPos, yPos = os.pullEvent("mouse_click")
	for i = 0,  table.getn(aList)do
		if (xPos <= josCfg.popUpMenuWidth + josCfg.startMenuWidth and xPos >= josCfg.startMenuWidth +1) and (yPos == i + 19 -table.getn(aList) -1  ) then			return "//"..dir..aList[i]
		end
	end
end

function drawInputDialog(title,message)
	local sWord = ""
	term.setCursorPos(10,5)
	term.setBackgroundColor(colors.blue)
	term.setTextColor(josCfg.dialogTextColor)
	write("                             ")
	term.setBackgroundColor(colors.orange)
	write(" ")
	term.setBackgroundColor(colors.green)
	write(" ")
	term.setBackgroundColor(colors.red)
	write(" ")
	term.setCursorPos(10,5)
	term.setBackgroundColor(colors.blue)
	write(title)
	term.setCursorPos(10,6)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("                              ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(16,6)
	term.setBackgroundColor(colors.yellow)
	write(message)
	term.setCursorPos(10,7)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("                              ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(10,8)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("    ")
	term.setBackgroundColor(colors.white)
	write("                      ")
	term.setBackgroundColor(colors.yellow)
	write("    ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(10,9)
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setBackgroundColor(colors.yellow)
	write("                              ")
	term.setBackgroundColor(colors.lightGray)
	write(" ")
	term.setCursorPos(10,10)
	write("                                ")
	term.setCursorPos(15,8)
	term.setBackgroundColor(colors.white)
	while true do
		local event, button, xPos, yPos = os.pullEvent()
		if event == "char" then
			sWord = sWord..button
			term.setCursorPos(15,8)
			term.setBackgroundColor(colors.white)
			write("                      ")
			term.setCursorPos(15,8)
			write(sWord)
			write("|")
		elseif event == "key" and button == 14 then
			sWord = sWord:sub(1,string.len(sWord)-1)
			term.setCursorPos(15,8)
			term.setBackgroundColor(colors.white)
			write("                      ")
			term.setCursorPos(15,8)
			write(sWord)
			write("|")
		elseif (event == "key" and button == 28) then
			return sWord
		elseif (event == "mouse_clicka") then
			if (xPos == 41 and yPos == 5) then
				break
			end
		end	
	end
end

function drawOptionPopUpMenu(x,y,dir)
		
end

function getPressedButton(dir)  --Sets up buttons for the loaded labels , please use loadDesktopFromFile() first
	f = {}
	local loadedLabels = {}
	x , y = 2 , 2
	fileColor = colors.white
	local FileList = fs.list(dir)
	table.sort(FileList)
	for i, file in ipairs(FileList) do
		loadedLabels[i]= file
		f[file.."x"] = x
		f[file.."y"] = y
		if x == 44 then 
			y = y + 5
			x = 2
		else
			x = x + 7
		end
	end
		if josMulti.getTabLength() >= 1 then drawTabs() end
		local event, button, xPos, yPos = os.pullEvent("mouse_click")
	i = 1
	while loadedLabels[i] ~= null do
		if xPos ~= nil and yPos ~= nill then 
		if (xPos >= f[loadedLabels[i].."x"] and xPos <= f[loadedLabels[i].."x"] + 3 ) and (yPos >= f[loadedLabels[i].."y"] and yPos <=       f[loadedLabels[i].."y"] + 3 ) then
			return dir..loadedLabels[i],button
		end
		i = i + 1
		end
	end
	if josMulti.getTabLength() >= 1 then
		x = 5
		for i = 1,josMulti.getTabLength() do
			if (yPos == 19) and (xPos == x+i) then
				josMulti.changeCurrentTabI(i)
				josMulti.runTab()
			end
			x = x+1
		end
	end
	
	
	pC = panelClicked(xPos,yPos,button)
	if pC ~= null then
		return pC
	end 		
		
	
end
function drawWindow(x1,x2,y1,y2,title)
	for i = 0,y2 -y1 do
		term.setCursorPos(x1, y1 +i)
		if i == 0 then
			term.setBackgroundColor(josCfg.windowTitleColor)
			for x = 1, x2 - x1 -3 do
				write(" ")
			end	
			term.setBackgroundColor(colors.orange)
			write(" ")
			term.setBackgroundColor(colors.green)
			write(" ")
			term.setBackgroundColor(colors.red)
			write(" ")
			term.setCursorPos(x1,y1)
			term.setBackgroundColor(josCfg.windowTitleColor)
			term.setTextColor(colors.black)
			write(title:sub(1,x2-x1 - 3))
		else	
			term.setBackgroundColor(josCfg.windowMainColor)
			for x = 1 , x2 - x1 do 
				write(" ")
			end
		end
	end	
	
end
